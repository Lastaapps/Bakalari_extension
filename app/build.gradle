/*
 *    Copyright 2020, Petr Laštovička as Lasta apps, All rights reserved
 *
 *     This file is part of Bakalari extension.
 *
 *     Bakalari extension is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     Bakalari extension is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with Bakalari extension.  If not, see <https://www.gnu.org/licenses/>.
 *
 */

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'

apply plugin: 'com.google.firebase.crashlytics'
apply plugin: "androidx.navigation.safeargs.kotlin"

ext.versionMajor = 1
ext.versionMinor = 0
ext.versionPatch = 0
ext.versionClassifier = null
ext.isBeta = true
ext.minimumSdkVersion = 18

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"
    defaultConfig {
        applicationId "cz.lastaapps.bakalariextension"
        targetSdkVersion 30
        minSdkVersion 19
        versionCode generateVersionCode() // 210010203
        versionName generateVersionName() // 1.2.3-SNAPSHOT

        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled true

        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    signingConfigs {
        buildTypes {
            debug {
                buildConfigField "java.lang.Long", "BUILD_TIME", "" + System.currentTimeMillis() + "L"
            }
            release {
                buildConfigField "java.lang.Long", "BUILD_TIME", "" + System.currentTimeMillis() + "L"
            }
        }
    }

    buildFeatures {
        buildConfig = true
        dataBinding = true
    }

    lintOptions {
        abortOnError false
        disable 'MissingTranslation'
    }

    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.5.0-alpha03'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.emoji:emoji-bundled:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation "androidx.work:work-runtime-ktx:2.4.0"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"

    implementation 'com.google.android.play:core-ktx:1.8.1'
    implementation 'com.google.firebase:firebase-analytics:17.5.0'
    implementation 'com.google.firebase:firebase-crashlytics:17.2.1'
    implementation 'com.google.firebase:firebase-database:19.4.0'

    implementation 'com.android.support:multidex:1.0.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.7'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.7'

    implementation 'androidx.room:room-runtime:2.3.0-alpha02'
    kapt 'androidx.room:room-compiler:2.3.0-alpha02'
    implementation 'androidx.room:room-ktx:2.3.0-alpha02'
    androidTestImplementation 'androidx.room:room-testing:2.3.0-alpha02'

    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.0.10'

    implementation 'com.github.smart-fun:XmlToJson:1.5.0'
    implementation 'com.google.android:flexbox:2.0.1'
    implementation 'com.hopenlib.library:flextools:1.0.1'
    implementation 'net.yslibrary.keyboardvisibilityevent:keyboardvisibilityevent:3.0.0-RC2'
    implementation 'com.wdullaer:materialdatetimepicker:4.2.3'

    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}


private Integer generateVersionCode() {
    return ext.minimumSdkVersion * 10000000 + ext.versionMajor * 10000 + ext.versionMinor * 100 + ext.versionPatch
}

private String generateVersionName() {
    String versionName = "${ext.versionMajor}.${ext.versionMinor}.${ext.versionPatch}"
    if (ext.versionClassifier == null && ext.isBeta) {
        ext.versionClassifier = "BETA"
    }

    if (ext.versionClassifier != null) {
        versionName += "-" + ext.versionClassifier
    }
    return versionName
}
